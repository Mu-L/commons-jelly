<project name="ojb-tags" default="compile" basedir=".">


<!-- ========== Initialize Properties ===================================== -->


  <property file="build.properties"/>                <!-- taglib local   -->
  <property file="../build.properties"/>             <!-- jelly local    -->
  <property file="${user.home}/build.properties"/>   <!-- user local     -->


<!-- ========== External Dependencies ===================================== -->


  <!-- The directories corresponding to your necessary dependencies -->
  <property name="jaxp.home"               value="/usr/local/jaxp1.1"/>
  <property name="jdk.home"                value="/usr/local/jdk1.3"/>
  <property name="junit.home"              value="/usr/local/junit3.7"/>
  <property name="bsf.home"                value="/usr/local/bsf"/>

  <property name="commons.home"            value="../../../jakarta-commons"/>
  <property name="sandbox.home"            value="../.."/>
  <property name="beanutils.home"          value="${commons.home}/beanutils"/>
  <property name="collections.home"        value="${commons.home}/collections"/>
  <property name="logging.home"            value="${commons.home}/logging"/>
  <property name="digester.home"           value="${commons.home}/digester"/>
  <property name="jexl.home"               value="${sandbox.home}/jexl"/>

  <!-- Values used for testing -->

  <property name="databaseUrl"             value="jdbc:hsqldb:hsql://localhost"/>
  <property name="databaseDriver"          value="org.hsqldb.jdbcDriver"/>
  <property name="databaseUser"            value="sa"/>
  <property name="databaseTable"           value="SYSTEM_TABLES"/>
  <property name="database.jar"            value="/java/hsqldb/hsqldb.jar"/>

<!-- ========== Derived Values ============================================ -->


  <!-- The locations of necessary jar files -->
  <property name="jdk.api"                 value="${jdk.home}/docs/api"/>
  <property name="tools.jar"               value="${jdk.home}/lib/tools.jar"/>
  <property name="jaxp.jaxp.jar"           value="${jaxp.home}/jaxp.jar"/>
  <property name="jaxp.parser.jar"         value="${jaxp.home}/crimson.jar"/>
  <property name="jaxp.api"                value="${jaxp.home}/docs/api"/>
  <property name="junit.jar"               value="${junit.home}/junit.jar"/>
  <property name="bsf.jar"                 value="${bsf.home}/bsf.jar"/>
  <property name="commons-beanutils.api"   value="${beanutils.home}/dist/docs/api"/>
  <property name="commons-beanutils.jar"   value="${beanutils.home}/dist/commons-beanutils.jar"/>
  <property name="commons-collections.api" value="${collections.home}/dist/docs/api"/>
  <property name="commons-collections.jar" value="${collections.home}/dist/commons-collections.jar"/>
  <property name="commons-logging.api"     value="${logging.home}/dist/docs/api"/>
  <property name="commons-logging.jar"     value="${logging.home}/dist/commons-logging.jar"/>
  <property name="commons-digester.api"    value="${digester.home}/dist/docs/api"/>
  <property name="commons-digester.jar"    value="${digester.home}/dist/commons-digester.jar"/>
  <property name="commons-jexl.jar"        value="${jexl.home}/dist/commons-jexl.jar"/>
  <property name="velocity-dep.jar"        value="/java/velocity/velocity-dep-1.4-dev.jar"/>

  <!-- ObjectBridge jar for optional OJB tags -->
  
  <property name="ojb.jar"                 value="/java/ojb/ojb.jar"/>

  

<!-- ========== Component Declarations ==================================== -->


  <!-- The name of this component -->
  <property name="component.name"          value="jelly-ojb"/>

  <!-- The primary package name of this component -->
  <property name="component.package"       value="org.apache.commons.jelly.tags.ojb"/>

  <!-- The title of this component -->
  <property name="component.title"         value="Jelly OJB tags"/>

  <!-- The current version number of this component -->
  <property name="component.version"       value="1.0-dev"/>

  <!-- The base directory for Jelly compilation targets -->
  <property name="jelly.build.home"        value="../../../target"/>

  <!-- The base directory for Jelly license -->
  <property name="jelly.license"          value="../../../../LICENSE"/>

  <!-- The base directory for compilation targets -->
  <property name="build.home"              value="target"/>

  <!-- The base directory for component configuration files -->
  <property name="conf.home"               value="conf"/>

  <!-- The base directory for distribution targets -->
  <property name="dist.home"               value="dist"/>

  <!-- The base directory for component sources -->
  <property name="source.home"             value="java"/>

  <!-- The base directory for unit test sources -->
  <property name="test.home"               value="test"/>


<!-- ========== Compiler Defaults ========================================= -->


  <!-- Should Java compilations set the 'debug' compiler option? -->
  <property name="compile.debug"           value="true"/>

  <!-- Should Java compilations set the 'deprecation' compiler option? -->
  <property name="compile.deprecation"     value="false"/>

  <!-- Should Java compilations set the 'optimize' compiler option? -->
  <property name="compile.optimize"        value="true"/>

  <!-- Construct compile classpath -->
  <path id="compile.classpath">
    <pathelement location="${jelly.build.home}/classes"/>
    <pathelement location="${build.home}/classes"/>
    <pathelement location="${jaxp.jaxp.jar}"/>
    <pathelement location="${jaxp.parser.jar}"/>
    <pathelement location="${dom4j.jar}"/>
    <pathelement location="${jexl.jar}"/>
    <pathelement location="${velocity-dep.jar}"/>
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${junit.jar}"/>
    
    <!-- optional JARs -->
    <pathelement location="${ojb.jar}"/>

    <pathelement location="${beanshell.jar}"/>

    <pathelement location="${bsf.jar}"/>
    <pathelement location="${pnuts.jar}"/>
    <pathelement location="${rhino.jar}"/>
    <pathelement location="${tools.jar}"/>
  </path>


<!-- ========== Test Execution Defaults =================================== -->


  <!-- Construct unit test classpath -->
  <path id="test.classpath">
    <pathelement location="${build.home}/classes"/>
    <pathelement location="${build.home}/tests"/>
    <pathelement location="${build.home}/classes"/>
    <pathelement location="${jaxp.jaxp.jar}"/>
    <pathelement location="${jaxp.parser.jar}"/>
    <pathelement location="${dom4j.jar}"/>
    <pathelement location="${jexl.jar}"/>
    <pathelement location="${velocity-dep.jar}"/>
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${junit.jar}"/>

    <pathelement location="${database.jar}"/>

    
    <!-- optional JARs -->
    <pathelement location="${ojb.jar}"/>

    <pathelement location="${beanshell.jar}"/>
    <pathelement location="${bsf.jar}"/>
    <pathelement location="${pnuts.jar}"/>
    <pathelement location="${rhino.jar}"/>
    <pathelement location="${tools.jar}"/>
  </path>

  <!-- Should all tests fail if one does? -->
  <property name="test.failonerror"        value="true"/>

  <!-- The test runner to execute -->
  <property name="test.runner"             value="junit.textui.TestRunner"/>


<!-- ========== Executable Targets ======================================== -->


  <target name="init"
   description="Initialize and evaluate conditionals">
    <echo message="-------- ${component.name} ${component.version} --------"/>
    <filter  token="name"                  value="${component.package}"/>
    <filter  token="version"               value="${component.version}"/>
    
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.home}/classes"/>
    <mkdir dir="${build.home}/conf"/>
    <mkdir dir="${build.home}/tests"/>
    
    <tstamp/>
    <copy  todir="${build.home}/conf" filtering="on">
      <fileset dir="${conf.home}" includes="*.MF"/>
    </copy>
  </target>


  <target name="compile" depends="init"
   description="Compile shareable components">
    <javac  srcdir="${source.home}"
           destdir="${build.home}/classes"
             debug="${compile.debug}"
       deprecation="${compile.deprecation}"
          optimize="${compile.optimize}">
      <classpath refid="compile.classpath"/>
    </javac>
    <copy    todir="${build.home}/classes" filtering="on">
      <fileset dir="${source.home}" excludes="**/*.java"/>
    </copy>
  </target>


  <target name="clean"
   description="Clean build and distribution directories">
    <delete    dir="${build.home}"/>
    <delete    dir="${dist.home}"/>
  </target>


  <target name="all" depends="clean,compile"
   description="Clean and compile all components"/>


  <target name="javadoc" depends="compile"
   description="Create component Javadoc documentation">
    <mkdir      dir="${dist.home}"/>
    <mkdir      dir="${dist.home}/docs"/>
    <mkdir      dir="${dist.home}/docs/api"/>
    <javadoc sourcepath="${source.home}"
                destdir="${dist.home}/docs/api"
           packagenames="org.*, javax.*"
                 author="true"
                private="true"
                version="true"
               doctitle="&lt;h1&gt;${component.title}&lt;/h1&gt;"
            windowtitle="${component.title} (Version ${component.version})"
                 bottom="Copyright (c) 2002 - Apache Software Foundation">
      <link     offline="true" packagelistLoc="${commons-beanutils.api}"
                   href="http://jakarta.apache.org/commons/beanutils/api/"/>
      <link     offline="true" packagelistLoc="${commons-collections.api}"
                   href="http://jakarta.apache.org/commons/collections/api/"/>
      <link     offline="true" packagelistLoc="${commons-logging.api}"
                   href="http://jakarta.apache.org/commons/logging/api/"/>
      <link     offline="true"  packagelistLoc="${jdk.api}"
                   href="http://java.sun.com/products/jdk/1.3/docs/api"/>
      <link     offline="true"  packagelistLoc="${jaxp.api}"
                   href="http://java.sun.com/xml/jaxp-docs-1.1/docs/api"/>
      <classpath  refid="compile.classpath"/>
    </javadoc>
  </target>


  <target name="dist" depends="compile,javadoc"
   description="Create binary distribution">
    <mkdir      dir="${dist.home}"/>
    <copy      file="${jelly.license}"
              todir="${dist.home}"/>
    <mkdir      dir="${build.home}/classes/META-INF"/>
    <copy      file="${jelly.license}"
             tofile="${build.home}/classes/META-INF/LICENSE.txt"/>
    <jar    jarfile="${dist.home}/commons-${component.name}.jar"
            basedir="${build.home}/classes"
           manifest="${build.home}/conf/MANIFEST.MF"/>
  </target>


<!-- ========== Unit Test Targets ========================================= -->


<!--
  <target name="test" depends="compile.tests"
   description="Run all unit test cases">
    <java classname="org.apache.commons.jelly.TestAll" fork="yes" failonerror="${test.failonerror}">
      <classpath refid="test.classpath"/>
    </java>
  </target>

-->

</project>
