<j:jelly xmlns:j="jelly:core">

  <!-- runs the XML doclet -->	
  <goal name="xml-doclet" prereqs="maven:compile">
    <path id="doclet.classpath">
		<pathelement path="${maven.build.dest}"/>
		<path refid="maven.dependency.classpath"/>
  	</path>
  	
	<javadoc 
  	  sourcepath="src/java" 
  	  packagenames="org.apache.commons.jelly.tags.*"
  	  doclet="org.apache.commons.jelly.util.XMLDoclet"
  	  docletpathref="doclet.classpath">
    </javadoc>
  </goal>

  <!-- runs the Tag doclet -->	
  <goal name="tag-doclet" prereqs="maven:compile">
    <path id="doclet.classpath">
      <pathelement path="target/classes"/>
      <pathelement path="${maven.build.dest}"/>
	  <path refid="maven.dependency.classpath"/>
	</path>
	
	<javadoc 
  	  sourcepath="src/java" 
  	  packagenames="org.apache.commons.jelly.tags.*"
  	  doclet="org.apache.commons.jelly.util.TagXMLDoclet"
  	  docletpathref="doclet.classpath">
    </javadoc>
  </goal>
	
  <!-- creates the XML webpage from the tag XML information -->		
  <goal name="doc-tags" prereqs="tag-doclet" 
	description="Generates the tag documentation">
	
	<mkdir dir="target/generated-xdocs"/>
	
	<j:file name="target/generated-xdocs/tags.xml">
	  <j:include uri="src/script/makeTagDoc.jelly"/>
	</j:file>
	
  </goal>

  <!-- ensure that the tag documentation is generated as part of the site -->	
  <goal
    name="deploy-site2" prereqs="doc-tags, deploy-site">
  </goal>
  
<!--
  <preGoal
    name="site:generate">

	<attainGoal name="doc-tags"/>
	
  </preGoal>
-->  
          
</j:jelly>
