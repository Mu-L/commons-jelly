<?xml version="1.0"?>

<project name="Jelly" default="maven:jar" basedir=".">

  <!-- Give user a chance to override without editing this file
       (and without typing -D each time they invoke a target) -->

  <!-- Allow any user specific values to override the defaults -->
  <property file="${user.home}/build.properties" />
  <!-- Allow user defaults for this project -->
  <property file="build.properties" />
  <!-- Set default values for the build -->
  <property file="project.properties" />
  
  <!-- the default build location -->
  <property name="maven.build.dest" value="target/classes"/>

  	  <path id="test.classpath">
        <pathelement path="${maven.build.dest}"/>
        <pathelement location="${lib.repo}/commons-logging-1.0.jar"/>
        <pathelement location="${lib.repo}/commons-beanutils-20020520.jar"/>
        <pathelement location="${lib.repo}/commons-collections-2.0.jar"/>
        <pathelement location="${lib.repo}/commons-digester-1.2.jar"/>
        <pathelement location="${lib.repo}/commons-jexl-1.0-dev.jar"/>
        <pathelement location="${lib.repo}/dom4j-1.4-dev.jar"/>
        <pathelement location="${lib.repo}/hsqldb.jar"/>
        <pathelement location="${lib.repo}/velocity-1.4-dev.jar"/>
        <pathelement location="/jpackages/jaxp-1.1/jaxp.jar"/>
        <pathelement location="/jpackages/jaxp-1.1/crimson.jar"/>
<!--        
        <pathelement location="${lib.repo}/xmlParserAPIs-2.0.0.jar"/>
        <pathelement location="${lib.repo}/xercesImpl-2.0.0.jar"/>
-->        
        <pathelement location="${lib.repo}/jdbc2_0-stdext.jar"/>
      </path>

  <!-- maven:start -->
  
  <!-- ================================================================== -->
  <!-- D E L E G A T O R S                                                -->
  <!-- ================================================================== -->
        
	<target name="maven:gump-descriptor">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="gump-descriptor"/>
	</target>
	
	<target name="maven:maven-update">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="maven-update"/>
	</target>
	
	<target name="maven:update-jars">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="update-jars"/>
	</target>
	
	<target name="maven:jar">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="jar"/>
	</target>
	
	<target name="maven:docs-quick">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="docs-quick"/>
	</target>
	
	<target name="maven:run-singletest">
	  <ant antfile="${maven.home}/plugins/test/build.xml" target="run-singletest"/>
	</target>
	
	<target name="maven:compile">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="compile"/>
	</target>
	
	<target name="maven:jar-resources">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="jar-resources"/>
	</target>
	
	<target name="maven:fo">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="fo"/>
	</target>
	
	<target name="maven:cvs-change-log">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="cvs-change-log"/>
	</target>
	
	<target name="maven:war">
	  <ant antfile="${maven.home}/plugins/j2ee/build.xml" target="war"/>
	</target>
	
	<target name="maven:generate-reactor">
	  <ant antfile="${maven.home}/plugins/reactor/build.xml" target="generate-reactor"/>
	</target>
	
	<target name="maven:cross-ref">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="cross-ref"/>
	</target>
	
	<target name="maven:deploy-site">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="deploy-site"/>
	</target>
	
	<target name="maven:ear">
	  <ant antfile="${maven.home}/plugins/j2ee/build.xml" target="ear"/>
	</target>
	
	<target name="maven:install-jar">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="install-jar"/>
	</target>
	
	<target name="maven:task-list">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="task-list"/>
	</target>
	
	<target name="maven:docs">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="docs"/>
	</target>
	
	<target name="maven:site">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="site"/>
	</target>
	
	<target name="maven:deploy-dist">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="deploy-dist"/>
	</target>
	
	<target name="maven:javadocs">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="javadocs"/>
	</target>
	
	<target name="maven:announce">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="announce"/>
	</target>
	
	<target name="maven:check-source">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="check-source"/>
	</target>
	
	<target name="maven:dist">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="dist"/>
	</target>
	
	<target name="maven:dist-build">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="dist-build"/>
	</target>
	
	<target name="maven:metrics">
	  <ant antfile="${maven.home}/plugins/metrics/build.xml" target="metrics"/>
	</target>
	
	<target name="maven:clean">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="clean"/>
	</target>
	
	<target name="maven:env">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="env"/>
	</target>
	
	<target name="maven:test">
	  <ant antfile="${maven.home}/plugins/test/build.xml" target="test"/>
	</target>
	
	<target name="maven:pdf">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="pdf"/>
	</target>
	
	<target name="maven:iutest">
	  <ant antfile="${maven.home}/plugins/iutest/build.xml" target="iutest"/>
	</target>
	
	<target name="maven:activity-log">
	  <ant antfile="${maven.home}/plugins/docs/build.xml" target="activity-log"/>
	</target>
	
	<target name="maven:verify-project">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="verify-project"/>
	</target>
	
	<target name="maven:validate-pom">
	  <ant antfile="${maven.home}/plugins/core/build.xml" target="validate-pom"/>
	</target>
	
	<target name="maven:validate-war">
	  <ant antfile="${maven.home}/plugins/j2ee/build.xml" target="validate-war"/>
	</target>
	

  <!-- maven:end -->

<!-- ========== Helper Targets ============================================ -->

	<target name="clean" depends="maven:clean">
	  <delete file="velocity.log"/>
	</target>
	
	<target name="site" depends="maven:site"/>
	
	<target name="test" depends="maven:test"/>

	<target name="compile" depends="maven:compile, maven:jar-resources">
      <taskdef
        name="jelly"
        classname="org.apache.commons.jelly.task.JellyTask">
        <classpath refid="test.classpath"/>
      </taskdef>    
    </target>	

<!-- ========== Sample Program Targets ==================================== -->

   <target name="demo.hw" depends="compile" 
      description="Runs the Hello World demo">
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/hello_world.jelly"/> 
    </java>
   </target>

   <target name="demo.ant" depends="compile" 
      description="Runs demo which displays Ant properties">
      
	<jelly file="src/test/org/apache/commons/jelly/show_ant_properties.jelly" output="target/ant.html"/>
	
   </target>


   <target name="demo.sql" depends="compile" 
      description="Runs an SQL demo">
      
      <!-- Values used for testing -->
	  <property name="databaseUrl"             value="jdbc:hsqldb:hsql://localhost"/>
	  <property name="databaseDriver"          value="org.hsqldb.jdbcDriver"/>
	  <property name="databaseUser"            value="sa"/>
	  <property name="databaseTable"           value="SYSTEM_TABLES"/>

	<echo message="Running example 3"/>

<!--	
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/sql/example3.jelly"/> 
      <sysproperty key="org.apache.commons.logging.simplelog.defaultlog" value="debug"/>
    </java>
-->
    
    <taskdef
      name="jelly"
      classname="org.apache.commons.jelly.task.JellyTask">
      <classpath refid="test.classpath"/>
    </taskdef>
    
	<echo message="Running example"/>
	
	<jelly file="src/test/org/apache/commons/jelly/sql/example3.jelly" output="target/sqloutput.xml"/>
	<jelly file="src/test/org/apache/commons/jelly/sql/example.jelly" output="target/sqloutput.xml"/>
<!--
	<jelly file="src/test/org/apache/commons/jelly/sql/example.jelly" output="${maven.build.dest}/sqloutput.xml"/>
	<jelly file="src/test/org/apache/commons/jelly/sql/example2.jelly" output="${maven.build.dest}/sqloutput2.xml"/>	
	<jelly file="src/test/org/apache/commons/jelly/sql/testSql.jelly" output="${maven.build.dest}/sqloutput3.xml"/>	
-->	
   </target>
   
	
<!--   
   <target name="demo.1" depends="compile" 
      description="Runs demo #1">
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/testing123.jelly"/> 
      <arg value="one"/> 
      <arg value="two"/> 
      <arg value="three"/> 
    </java>
   </target>

   <target name="demo.2" depends="compile" 
      description="Runs demo #2">
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/example2.jelly"/> 
    </java>
   </target>

   <target name="demo.3" depends="compile" 
      description="Runs demo #3">
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/example3.jelly"/> 
      <arg value="one"/> 
      <arg value="two"/> 
      <arg value="three"/> 
    </java>
   </target>

   <target name="demo.sysprop" depends="compile" 
      description="Runs demo which displays system properties">
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/show_properties.jelly"/> 
    </java>
   </target>

   <target name="demo.all" depends="compile" 
      description="Runs all the demo scripts inside one single script">
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/run_all.jelly"/> 
      <arg value="one"/> 
      <arg value="two"/> 
      <arg value="three"/> 
    </java>
   </target>

   <target name="demo.pnuts" depends="compile, checkPNuts" 
      description="Runs a pnuts demo which displays system properties">
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/pnuts/example.jelly"/> 
    </java>
   </target>

   <target name="demo.javascript" depends="compile, checkRhino" 
      description="Runs a javascript demo which displays system properties">      
    <java classname="org.apache.commons.jelly.Jelly" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="src/test/org/apache/commons/jelly/javascript/example.jelly"/> 
    </java>
   </target>
-->   

</project>
