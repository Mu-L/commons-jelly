<?xml version="1.0"?>
<test:suite 
    xmlns:j="jelly:core" 
    xmlns:util="jelly:util" 
    xmlns:test="jelly:junit" 
    xmlns:log="jelly:log">

  <test:case name="testTokenize">
    
        <util:tokenize var="tokens" delim=",">Test1,Test2,Test3,Test4</util:tokenize>

        <j:set var="s" value="${size(tokens)}"/>        
        <test:assert test="${s == 4}"/>
        <test:assert test="${size(tokens) == 4}"/>

<!--        
        <j:set var="s" value="${tokens.size()}"/>        
        <test:assert test="${s == 4}"/>
        
        <test:assert test="${tokens.size() == 4}"/>
-->
            
        <test:assertEquals expected="Test1" actual="${tokens[0]}"/>
        <test:assertEquals expected="Test2" actual="${tokens[1]}"/>
        <test:assertEquals expected="Test3" actual="${tokens[2]}"/>
        <test:assertEquals expected="Test4" actual="${tokens[3]}"/>
        
        <test:assertEquals expected="Test4" actual="${tokens[s - 1]}"/>
        <test:assertEquals expected="Test4" actual="${tokens[size(tokens) - 1]}"/>
        
<!--        
        <test:assertEquals expected="Test4" actual="${tokens.get(size(tokens) - 1)}"/>
        
        
        <test:assertEquals expected="Test4" actual="${tokens[tokens.size() - 1]}"/>
        <test:assertEquals expected="Test4" actual="${tokens.get(tokens.size() - 1)}"/>
-->        
        
  </test:case>

  <test:case name="testFileExists">

      <!-- ensure that ${base.dir} is defined -->
      <j:if test="${empty base.dir}">
          <j:set var="base.dir" value="."/>
      </j:if>
        
      <j:set var="flag" value="not found"/>

      <util:available file="${base.dir}/project.xml">
          <j:set var="flag" value="found"/>
      </util:available>
        
      <test:assertEquals expected="found" actual="${flag}">
          Should have found the file via the file $${base.dir}/project.xml with base.dir=${base.dir}
      </test:assertEquals>
        
      <util:available file="${base.dir}/doesNotExist.xml">
          <test:fail>The file ${base.dir}/doesNotExist.xml should not exist</test:fail>
      </util:available>
        
  </test:case>
    
  <test:case name="testURIExists">

      <j:set var="flag" value="not found"/>

        <!-- use relative URIs-->
        
      <util:available uri="dummy.xml">
          <j:set var="flag" value="found"/>
      </util:available>
        
      <test:assertEquals expected="found" actual="${flag}">
        Should have found the file via the URI dummy.xml
      </test:assertEquals>
        
      <util:available uri="doesNotExist.xml">
          <test:fail>The URI doesNotExist.xml should not exist!</test:fail>
      </util:available>
        
  </test:case>
  
  <test:case name="testReplace">
    
    <util:replace oldChar="\" newChar="/" var="testString">A\B</util:replace>
    <test:assertEquals expected="A/B" actual="${testString}">
      Should have replaced a back slash with a forward one
    </test:assertEquals>
    
    <j:set var="testString2"><util:replace oldChar="\" newChar="/">A\B</util:replace></j:set>
    <test:assertEquals expected="A/B" actual="${testString2}">
      Should have replaced a back slash with a forward one
      and placed the result into output
    </test:assertEquals>
    
    <util:replace oldChar="/" newChar="\" value="${testString}" var="testString3" />
    <test:assertEquals expected="A\B" actual="${testString3}">
      Should have replaced a slash with a back slash from a variable
      and placed the result into a variable
    </test:assertEquals>
  </test:case>

  <test:case name="testProperties">
      
      <util:properties uri="foo.properties"/>
      
      <test:assertEquals expected="ABC" actual="${foo}"/>
    
  </test:case>
    
  <test:case name="testPropertiesVar">
      
      <util:properties uri="foo.properties" var="props"/>
      
      <test:assertEquals expected="ABC" actual="${props.foo}"/>
    
      <log:info>Loaded properties value ${props}</log:info>
    
  </test:case>
  
  <test:case name="testFileTag">
      <util:file name="${basedir}/src/test/org/apache/commons/jelly/tags/util/suite.jelly" 
        var="suite" />
      <test:assert test="${suite != null}" >The suite should exist</test:assert>
  </test:case>
    
</test:suite>
