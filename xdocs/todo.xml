<?xml version="1.0"?>

<document>
  <properties>
    <title>TODO</title>
    <author email="jstrachan@apache.org">James Strachan</author>
  </properties>

  <body>
    <section name="TODO"> 
      <p>
        The following is a list of items that need to be completed in
        Jelly.  Contributions are welcome!.
      </p>
      
      
    <section name="Core tasks"> 
      <ul>
        <li>
        	add a SAX Locator to TagScript instances so that exceptions get adorned with nice 
        	line number information for debugging when things go wrong
        </li>
        <li>write a Cocoon JellyTransformer so that Jelly scripts can be used easily inside Cocoon</li>
        <li>autogenerate tag library documentation, in a kinda javadoc style, showing all tag libraries, 
			their tags and descriptions of their tags. 
			We could also autogenerate XML Schemas or RelaxNG docs for tag libraries</li>
        <li>Patch TagLibrary to alias all &lt;mixedCase&gt; tags to &lt;mixed-case&gt;  tags</li>
		<li>Rename the DynaTag interface to be DynamicAttributes along with JSP1.3, 
			also add a namespace URI parameter
		</li>
		<li>Add support for namespace URI use inside XPath expressions.</li>
		<li>When defining new tags using &lt;define:tag&gt;, we should allow attributes to be named,<br/>
			specified as required, specify the optional conditions and so forth for validating instances.<br/> 
			I guess this could just be normal script though.
		</li>
		<li>The org.apache.commons.jelly.impl package doesn't have a great name - <br/>
			Can we think of a better one? <br/>
			Also some of the classes in this package could maybe do with a rename? <br/>
			ScriptBlock for example - should we just call it a Block or maybe a CompositeScript?
		</li>
		<li>Add whitespace trimming support. <br/>
			Allow a taglib to decide which tags 'trim' and which don't so that<br/>
			unnecessary whitespace can be removed at compile time.
		</li>
		<li>Add parent Context and support for other scopes such as session, <br/>
			request, cookie, initParam, param etc.<br/>
			Maybe add a Scope class for variable names which can contain a scope name <br/>
			and variable name. Then things like  cookie:foo or initParam:bar can be parsed <br/>
			at compile time into an object.<br/>
		</li>
		<li>Add an adapter to run JSP tag libraries inside Jelly when Jelly is used in a 
			Servlet / JSP environment?
		</li>
		<li>Document much more!</li>
		<li>Provide an alternative non-XML parser such that Jelly scripts do not<br/>
			need to be XML. This could allow Velocity-style concise notation <br/>
			for common Jelly tags.
		</li>
	  </ul>
    </section>
      
    <section name="Ideas for new tag libraries"> 
      <ul>
		<li>Add JUnit tag library along these lines...
<pre>&lt;junit:assert test="${foo == 22}"&gt;some description&lt;/junit:assert&gt;
&lt;junit:assertEquals value="${foo}" expected="${22}"&gt;some description&lt;/junit:assert&gt;
</pre>
		</li>
        <li>
        	A threading tag library so that parts of a Jelly script can be executed asynchronously. For example
<pre>
&lt;thread:async threadPool="${myThreadPool}"&gt;
	some async Jelly goes here...
&lt;/thread:async&gt;</pre>
        </li>
        <li>
        	An XSD tag library that can be used to parse XSD documents and create DynaBeans from the complex types.
<pre>
&lt;xsd:element name="MyDynamicClass"&gt;
  &lt;xsd:complexType&gt;
  	...
  &lt;/xsd:complexType&gt;
&lt;/xsd:element&gt;</pre>

			Also we could consider using class names or XSD type names to do conversions of values, maybe using
			the ConvertUtils class in beanutils.
        </li>
        <li>conside a tag library which implements the <a href="http://stx.gingerall.cz/stx/index.html">STX</a>
        	specification for the SAX based transformation of XML. This is kinda like XPath and XSLT but is based
        	purely on a SAX stream. Maybe we could wrap <a href="http://www.obqo.de/joost">Joost</a>
        	in a Jelly tag library
		</li>
        <li>Develop a http tag library, probably based on commons-httpclient, that can be used for scripting web services</li>
        <li>A Betwixt tag library to make it easy to serialize beans to and from XML from within Jelly scripts.</li>
        <li>An XML validating tag library using MSV to validate XML against DTDs, RelaxNG, XML Schema etc</li>
        <li>Implement a Schematron tag library for validing XML using a path based approach, rather than schema based.</li>
        <li>
        	Provide support for running a piece of Jelly script remotely. This would be particularly useful for distributed
        	testing. Maybe integrating or enhancing something like 
        	<a href="http://sourceforge.net/projects/remoteant">rant</a>
        </li>
	  </ul>
    </section>

    <section name="Changes to existing tag libraries"> 
      <ul>
		<li>Add JSL test cases to test for ordering of patterns and that the correct output comes out.</li>
		<li>Add tags &lt;copy&gt; &lt;copyOf&gt; &lt;element&gt; &lt;attribute&gt; to JSL </li>
	  </ul>
    </section>

    <section name="Ponder about"> 
      <p>
        The following is a list of things that might be good to add to Jelly, maybe after more thought.
      </p>
      <ul>
        <li>
			maybe consider a tag which will switch the default EL to XPath; then XPath and EL can be peers. Then ${foo}
			can be used as an XPath expression anywhere
		</li>
		<li>
			Consider using &lt;jsl:stylesheet var="foo"&gt; then reusing the stylesheet later via 
<pre>
&lt;style stylesheet="${foo}"&gt;
	xml goes there...
&lt;/style&gt;</pre>
		</li>
	  </ul>
    </section>
    
    </section>
  </body>
</document>

